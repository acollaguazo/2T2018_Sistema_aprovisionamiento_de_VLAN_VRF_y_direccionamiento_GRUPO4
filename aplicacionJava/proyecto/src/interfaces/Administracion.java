/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.ConectorDB;
import clases.Consulta;
import clases.PE;
import clases.Registro;
import clases.SSHConnector;
import clases.User;
import com.jcraft.jsch.JSchException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author HOME
 */
public class Administracion extends javax.swing.JFrame {

    ConectorDB conDB;
    User user;
    PE pe;
    SSHConnector sshConnector;
    Consulta consulta;
    ArrayList<Integer> nvlan = new ArrayList<Integer>();

    /**
     * Creates new form Administracion
     */
    public Administracion() {
        initComponents();
        inicio();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();

        jLabel3.setText("jLabel3");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ROUTER");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("CREAR VLAN");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("EMPRESA");

        jLabel5.setText("VLAN");

        jLabel7.setText("CIUDAD");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("SHOW RUN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("EJECUTAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("CREAR VRF");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("EMPRESA");

        jLabel9.setText("VLAN");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        jLabel10.setText("CIUDAD");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jRadioButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButton2)
                                        .addGap(6, 6, 6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(29, 29, 29)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(96, 96, 96))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(jRadioButton2))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        //AsignaEmpresaJCombo();
        AsignaCampoJcombo(jComboBox1, "empresa", "razonSocial");
        //AsignarCiudadJCombo();
        AsignaCampoJcombo(jComboBox5, "ciudad", "nombre");
        if (jRadioButton1.isSelected()) {
            jLabel4.setVisible(true);
            jLabel5.setVisible(true);
            jLabel7.setVisible(true);
            jComboBox1.setVisible(true);
            jTextField1.setVisible(true);
            jComboBox5.setVisible(true);
            jLabel8.setVisible(false);
            jLabel9.setVisible(false);
            jLabel10.setVisible(false);
            jComboBox2.setVisible(false);
            jComboBox3.setVisible(false);
            jComboBox4.setVisible(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            sshConnector.connect(user, pe, 22);
            String result = sshConnector.executeCommand("show run\n       ");
            jTextArea1.setText(result);
            sshConnector.disconnect();
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSchException ex) {
            Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        AsignaCampoJcombo(jComboBox2, "empresa", "razonSocial");
        AsignaCampoJcombo(jComboBox4, "ciudad", "nombre");
        if (jRadioButton2.isSelected()) {
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jLabel7.setVisible(false);
            jComboBox1.setVisible(false);
            jTextField1.setVisible(false);
            jComboBox5.setVisible(false);
            jLabel8.setVisible(true);
            jLabel9.setVisible(true);
            jLabel10.setVisible(true);
            jComboBox2.setVisible(true);
            jComboBox3.setVisible(true);
            jComboBox4.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //la opcion de crear vlan
        if (jRadioButton1.isSelected()) {
            //valida si los campos son correctamente llenados y seleccionados
            if (!(jComboBox1.getSelectedItem().toString().equals("Seleccione...")) && !(jTextField1.getText().equals("")) && !(jComboBox5.getSelectedItem().toString().equals("Seleccione..."))) {
                //verifica si la vlan es un numero
                if (isNumeric(jTextField1.getText())) {
                    //verifica si la vlan es un numero entre 1-4096
                    if ((Integer.parseInt(jTextField1.getText()) >= 1) && (Integer.parseInt(jTextField1.getText()) <= 4096)) {

                        switch (existeVlanCiudad()) {

                            case 0:
                                JOptionPane.showMessageDialog(null, "no hay vlan disponibles en la ciudad" + jComboBox5.getSelectedItem().toString());
                                break;
                            case -1:
                                if (!poseeVLANempresa()) {
//                                    
                                    registrarvlanBD_R(Integer.parseInt(jTextField1.getText()), jComboBox5.getSelectedItem().toString(), jComboBox1.getSelectedItem().toString(), -1);

                                } else {

                                    int closeSelected = JOptionPane.showConfirmDialog(null, "¿desea que se cree otra vlan para la empresa?", "Alerta", JOptionPane.YES_NO_OPTION);
                                    if (closeSelected == JOptionPane.YES_OPTION) {
                                        registrarvlanBD_R(Integer.parseInt(jTextField1.getText()), jComboBox5.getSelectedItem().toString(), jComboBox1.getSelectedItem().toString(), -1);
                                    } else {
                                        System.out.println("NO SE CREO VLAN");
                                    }

                                }

                                break;
                            case 1://existe vlan dentro de la ciudad
                                System.out.println("vlan existe se asignara otra");
                                JOptionPane.showMessageDialog(null, "VLAN " + jTextField1.getText() + " existe");
                                if (!poseeVLANempresa()) {
                                    for (int i = 1; i <= 4096; i++) {
                                        for (int v : nvlan) {
                                            if (i != v) {
                                                registrarvlanBD_R(i, jComboBox5.getSelectedItem().toString(), jComboBox1.getSelectedItem().toString(), 1);

                                                i = 4097;
                                                break;
                                            }

                                        }

                                    }

                                } else {
                                    System.out.println("la vlan existe y la empresa tiene una vlan quiere otra");
                                    JOptionPane.showMessageDialog(null, "VLAN " + jTextField1.getText() + " existe");
                                    for (int i = 1; i <= 4096; i++) {
                                        for (int v : nvlan) {
                                            if (i != v) {
                                                int closeSelected = JOptionPane.showConfirmDialog(null, "¿desea que se cree otra vlan para la empresa?", "Alerta", JOptionPane.YES_NO_OPTION);
                                                if (closeSelected == JOptionPane.YES_OPTION) {
                                                    registrarvlanBD_R(Integer.parseInt(jTextField1.getText()), jComboBox5.getSelectedItem().toString(), jComboBox1.getSelectedItem().toString(), 1);
                                                } else {
                                                    System.out.println("NO SE CREO VLAN");
                                                }
                                                i = 4097;
                                                break;
                                            }

                                        }

                                    }

                                }

                                break;
                            default:
                                break;

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El número de VLAN debe de ser entre 1 a 4096 vuelva a intentarlo.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El número de VLAN debe de ser entre 1 a 4096 vuelva a intentarlo.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Campos incompletos, vuelva a intentar.");
            }
        } else if (jRadioButton2.isSelected()) {
            if (!(jComboBox2.getSelectedItem().toString().equals("seleccione...")) && !(jComboBox3.getSelectedItem().toString().equals("seleccione...")) && !(jComboBox4.getSelectedItem().toString().equals("seleccione..."))) {
                String nombreVRF = obtenerVRF();
                if (nombreVRF.equals("no_existe")) {
//                    conDB = new ConectorDB();
//                    Connection reg = conDB.getConnection();
//                    Registro r = new Registro();
//                    nombreVRF = "VRF_" + jComboBox2.getSelectedItem().toString() + "_" + jComboBox3.getSelectedItem().toString();
//                    System.out.println(nombreVRF);
//                    r.registrarVRF(reg, nombreVRF, Integer.parseInt(jComboBox3.getSelectedItem().toString()), jComboBox4.getSelectedItem().toString(), jComboBox2.getSelectedItem().toString());
//                    JOptionPane.showMessageDialog(null, "se creo" + nombreVRF + "PARA la empresa " + jComboBox2.getSelectedItem().toString() + " con vlan " + jComboBox3.getSelectedItem().toString());
                      registrarvrfBD_R(Integer.parseInt(jComboBox3.getSelectedItem().toString()),jComboBox2.getSelectedItem().toString(),jComboBox4.getSelectedItem().toString());
                } else {
                    JOptionPane.showMessageDialog(null, "existe VRF" + nombreVRF + "PARA la empresa " + jComboBox2.getSelectedItem().toString() + " seleccionada");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Falta información, inténtelo de nuevo");
            }

        } else {
            System.out.println("DEBE SELECCIONAR ALGO");
        }
        for (int z : nvlan) {
            System.out.println(z);
        }
        nvlan.clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        if (jComboBox2.getSelectedItem().toString().equals("Seleccione...")) {
            JOptionPane.showMessageDialog(null, "Primero seleccione empresa");
        } else {
            asignandoVLANComboBox();
        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administracion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void setPE(PE pe) {
        this.pe = pe;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public void setConectorDB(ConectorDB con) {
        this.conDB = con;
    }

    public void setSSHConector(SSHConnector sshConnector) {
        this.sshConnector = sshConnector;
    }

    public void setjLabelRouter(String nameR) {
        jLabel2.setText(nameR);
    }

    public void inicio() {

        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel7.setVisible(false);
        jLabel8.setVisible(false);
        jLabel9.setVisible(false);
        jLabel10.setVisible(false);
        jComboBox1.setVisible(false);
        jComboBox2.setVisible(false);
        jComboBox3.setVisible(false);
        jComboBox4.setVisible(false);
        jTextField1.setVisible(false);
        jComboBox5.setVisible(false);
    }

    public void AsignaCampoJcombo(JComboBox jCombo, String nombreTabla, String nombreCampo) {
        jCombo.removeAllItems();
        jCombo.addItem("Seleccione...");
        try {
            conDB = new ConectorDB();
            Connection reg = conDB.getConnection();
            consulta = new Consulta();
            ResultSet rs = consulta.getResultSetTabla(reg, nombreTabla);
            if (rs != null) {
                while (rs.next()) {
                    jCombo.addItem(rs.getString(nombreCampo));
                }
            } else {
                System.out.println("ERROR");
            }
            rs.close();
            reg.close();
            conDB.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static boolean isNumeric(String cadena) {

        boolean resultado;

        try {
            Integer.parseInt(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }

        return resultado;
    }

    public int existeVlanCiudad() {
        int cont = 0;
        int op = -1;
        try {
            conDB = new ConectorDB();
            Connection reg = conDB.getConnection();
            consulta = new Consulta();
            ResultSet rs = consulta.getResultSetTabla(reg, "vlan");
            if (rs != null) {
                while (rs.next()) {
                    if (jComboBox5.getSelectedItem().toString().equals(rs.getString("ciudad"))) {
                        nvlan.add(rs.getInt("N_vlan"));
                        cont++;//contador de vlan dentro de la ciudad
                        if (jTextField1.getText().equals(rs.getString("N_vlan"))) {
                            op = 1;//da un valor de 1 si esta el numero vlan dentro de la ciudad
                        }

                    }
                }
            } else {
                System.out.println("rsvacio");

            }
            rs.close();
            reg.close();
            conDB.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (cont == 4096) {
            op = 0;//si el contador de vlans es 4096 entonces cambia op a pesar de que haya  un numero de vlan
        }           //  corrige el error en que existe vlan y haya 4096 vlans 
        Collections.sort(nvlan);
        return op;//retorna valor -1 cuando no existe vlan en ciudad
    }

    public boolean poseeVLANempresa() {
        try {
            conDB = new ConectorDB();
            Connection reg = conDB.getConnection();
            consulta = new Consulta();
            ResultSet rs = consulta.getResultSetTabla(reg, "vlan");
            if (rs != null) {
                while (rs.next()) {
                    if (jComboBox5.getSelectedItem().toString().equals(rs.getString("ciudad"))) {
                        if (jComboBox1.getSelectedItem().toString().equals(rs.getString("empresa"))) {
                            rs.close();
                            reg.close();
                            conDB.desconectar();
                            return true;
                        }
                    }
                }
            } else {
                System.out.println("rsvacio");

            }
            rs.close();
            reg.close();
            conDB.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    public void asignandoVLANComboBox() {
        try {
            conDB = new ConectorDB();
            Connection reg = conDB.getConnection();
            consulta = new Consulta();
            ResultSet rs = consulta.getResultSetTabla(reg, "vlan");
            if (rs != null) {
                while (rs.next()) {
                    if ((jComboBox2.getSelectedItem().toString().equals(rs.getString("empresa"))) && (jComboBox4.getSelectedItem().toString().equals(rs.getString("ciudad")))) {
                        jComboBox3.addItem(rs.getString("N_vlan"));
                    }

                }
            } else {
                System.out.println("ERROR");
            }
            rs.close();
            reg.close();
            conDB.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void registrarvlanBD_R(int vlan, String ciudad, String empresa, int option) {
        try {
            conDB = new ConectorDB();
            Connection reg = conDB.getConnection();
            Registro r = new Registro();
            r.registrarVLAN(reg, vlan, ciudad, empresa);
            reg.close();
            conDB.desconectar();

            try {
                PE PE_SSH = null;

                sshConnector = new SSHConnector();
                for (PE pe : Inicio.pes) {

                    if (ciudad.equals(pe.getCiudad())) {
                        PE_SSH = new PE(pe.getNombre(), pe.getCiudad(), pe.getDireccionIP());
                        break;
                    }
                }
                System.out.println(PE_SSH.toString());
                sshConnector.connect(user, PE_SSH, 22);
                //sshConnector.executeCommand2("conf t\n" + "int f0/0." + vlan + "\n" + "encapsulation dot1q " + vlan + "\n" + "description VLAN-DE-EMPRESA-" + empresa + "\n" + "do wr \n\n");
                String result = sshConnector.executeCommand("conf t\n" + "int f0/0." + vlan + "\n" + "encapsulation dot1q " + vlan + "\n" + "description VLAN-DE-EMPRESA-" + empresa + "\n" + "do wr \n\n");
                //jTextArea1.setText(result);
                sshConnector.disconnect();
                if (option == -1) {
                    JOptionPane.showMessageDialog(null, "VLAN " + vlan + " creada exitosamente en la ciudad " + ciudad + " para la empresa " + empresa);
                } else if (option == 1) {
                    JOptionPane.showMessageDialog(null, "Se asigno una VLAN nueva " + vlan + " en la ciudad " + ciudad + " para la empresa " + empresa);
                }
            } catch (JSchException e) {
                e.printStackTrace();
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void registrarvrfBD_R(int vlan,String empresa,String ciudad) {
        conDB = new ConectorDB();
        Connection reg = conDB.getConnection();
        Registro r = new Registro();
        String nombreVRF = "VRF_" + empresa + "_" + vlan+"";
        System.out.println(nombreVRF);
        r.registrarVRF(reg, nombreVRF, vlan, ciudad, empresa);
        
        try {
                PE PE_SSH = null;

                sshConnector = new SSHConnector();
                for (PE pe : Inicio.pes) {

                    if (ciudad.equals(pe.getCiudad())) {
                        PE_SSH = new PE(pe.getNombre(), pe.getCiudad(), pe.getDireccionIP());
                        break;
                    }
                }
                System.out.println(PE_SSH.toString());
                sshConnector.connect(user, PE_SSH, 22);
                sshConnector.executeCommand("config t\nip vrf "+nombreVRF+"\nrd 1:"+vlan+"\nroute-target export 1:"+vlan+"\nroute-target import 1:"+vlan +"\nint f0/0."+vlan+"\nip vrf forwarding "+nombreVRF+"\ndo wr\n"+""+"\ndo wr\n\n " );
                sshConnector.disconnect();
                JOptionPane.showMessageDialog(null, "se creo" + nombreVRF + " para la empresa " + empresa + " con vlan " + vlan);
            } catch (JSchException e) {
                e.printStackTrace();
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Administracion.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        
    }

    public String obtenerVRF() {
        String nombreVRF = "no_existe";
        try {
            conDB = new ConectorDB();

            Connection reg = conDB.getConnection();

            consulta = new Consulta();

            ResultSet rs = consulta.getResultSetTabla(reg, "VRF");

            if (rs != null) {

                while (rs.next()) {

                    if (jComboBox2.getSelectedItem().toString().equals(rs.getString("empresa"))) {
                        nombreVRF = rs.getString("nombreVRF");
                    }
                }
            } else {
                System.out.println("rsvacio");

            }
            rs.close();
            reg.close();
            conDB.desconectar();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return nombreVRF;
    }

}
